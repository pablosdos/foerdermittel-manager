# Generated by Django 3.2.8 on 2021-11-01 21:32

from django.db import migrations, models
import django.db.models.deletion
import uuid


areas = (('AR', 'Arbeit'),
         ('BI', 'Aus- & Weiterbildung'),
         ('AW', 'Außenwirtschaft'),
         ('BE', 'Beratung'),
         ('CO', 'Corona-Hilfe'),
         ('DI', 'Digitalisierung'),
         ('EE', 'Energieeffizienz & Erneuerbare Energien'),
         ('EG', 'Existenzgründung & -festigung'),
         ('FO', 'Forschung & Innovation (themenoffen)'),
         ('FT', 'Forschung & Innovation (themenspezifisch)'),
         ('GS', 'Gesundheit & Soziales'),
         ('IN', 'Infrastruktur'),
         ('KU', 'Kultur'),
         ('MS', 'Medien & Sport'),
         ('LL', 'Landwirtschaft & Ländliche Entwicklung'),
         ('MA', 'Messen & Ausstellungen'),
         ('RF', 'Regionalförderung'),
         ('SR', 'Smart Cities & Regionen'),
         ('SS', 'Städtebau & Stadterneuerung'),
         ('UN', 'Umwelt- & Naturschutz'),
         ('UF', 'Unternehmensfinanzierung'),
         ('WB', 'Wohnungsbau & Modernisierung'))


def create_funding_areas(apps, schema):
    FundingArea = apps.get_model('funding', 'FundingArea')

    for area in areas:
        FundingArea.objects.create(name=area[1])


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50,
                 null=True, verbose_name='Stadt Name')),
                ('lon', models.FloatField(default=0, verbose_name='Longitude')),
                ('lat', models.FloatField(default=0, verbose_name='Latitude')),
            ],
        ),
        migrations.CreateModel(
            name='FundingArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64,
                 unique=True, verbose_name='Name')),
            ],
        ),
        migrations.CreateModel(
            name='FundingSponsor',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Fördergeber')),
                ('telephone', models.CharField(
                    max_length=64, verbose_name='Telefon')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('website', models.URLField(verbose_name='Website')),
            ],
            options={
                'verbose_name': 'Fördergeber',
                'verbose_name_plural': 'Fördergebern',
            },
        ),
        migrations.CreateModel(
            name='FundingProgramm',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4,
                 primary_key=True, serialize=False, unique=True, verbose_name='id')),
                ('name', models.CharField(blank=True,
                 max_length=512, null=True, verbose_name='Name')),
                ('description', models.TextField(blank=True,
                 null=True, verbose_name='Beschreibung')),
                ('type', models.CharField(choices=[('ZS', 'Zuschuss'), ('KR', 'Kredit'), ('BE', 'Beteiligung'), ('BU', 'Bürgschaft'), (
                    'DA', 'Darlehen'), ('GA', 'Garantie'), ('SO', 'sonstige')], max_length=56, null=True, verbose_name='Förderungsart')),
                ('region', models.CharField(choices=[('HE', 'Hessen'), ('BW', 'Baden Würtember'), ('BA', 'Bayern'), ('RP', 'Rheinland-Pfalz'), ('BR', 'Brandenburg'), ('BE', 'Berlin'), ('BM', 'Bm'), ('NS', 'Niedersachsen'), ('SA', 'Sachsen-Anhalt'), ('HA', 'Hamburg'), (
                    'MV', 'Mecklenburg-Vorpommern'), ('NW', 'Nordrhein-Westfalen'), ('SC', 'Sachsen'), ('SH', 'Schleswig-Holstein'), ('AN', 'Sonstige'), ('TH', 'Thüringen'), ('WW', 'Bundesweit')], default='RP', max_length=2, verbose_name='Födergebiet')),
                ('min_citzens', models.IntegerField(
                    default=0, verbose_name='Mindest Einwöhnerszahl')),
                ('url', models.URLField(unique=True, verbose_name='URL')),
                ('area', models.ManyToManyField(
                    to='funding.FundingArea', verbose_name='Förderungsbereich')),
                ('sponsor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL,
                 to='funding.fundingsponsor', verbose_name='Fördergeber')),
            ],
            options={
                'verbose_name': 'Förderungsprogramm',
                'verbose_name_plural': 'Förderungsprogramme',
            },
        ),
        migrations.RunPython(create_funding_areas)
    ]
